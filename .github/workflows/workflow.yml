name: Check update everyday

on:
  schedule:
    - cron: "0 1 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Check update
        env:
          image: ${{ secrets.IMAGE_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          token: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          publish_date1=$(curl -sX GET "https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest" | awk '/published_at/{print $4;exit}' FS='[""]')
          build_date=$(curl -sX GET "https://hub.docker.com/v2/repositories/zyao89/adguardhome-with-smartdns/" | grep -oP '(?<="last_updated": ")[^"]*' | cut -d '.' -f1 | awk '{print $1"Z"}')
          if [ $publish_date1 \< $build_date ]
            then
              echo up to date
              exit
          fi
        # 构建镜像，指定镜像名
      - name: Build image
        run: docker build . --file Dockerfile --tag $image
      - name: Log into registry
        run: docker login -u ${{ username }} -p ${{ token }}
      - name: Push image
        run: |
          # 拼接镜像 id，这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
          IMAGE_ID=$username/$image

          # 将所有的大写字母转为小写
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # 从 GitHub.ref 中取出版本
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # 从 tag 名字中替换 v 字符
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          # 设置镜像 id 和版本号
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # 进行 push
          docker push $IMAGE_ID:$VERSION
